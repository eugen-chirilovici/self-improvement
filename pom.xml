<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.echirilovici</groupId>
    <artifactId>self-improvement</artifactId>

    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>self-improvement</name>
    <description>Demo project for Spring Boot</description>

    <modules>
        <module>self-improvement-db</module>
        <module>self-improvement-domain</module>
        <module>self-improvement-service</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <base.package>com.selfimprovement</base.package>
        <spring-cloud.version>2022.0.3</spring-cloud.version>
        <liquibase-maven-plugin.version>4.18.0</liquibase-maven-plugin.version>
        <liquibase-maven-driver.version>4.9.0</liquibase-maven-driver.version>
        <docker-maven-plugin.version>0.41.0</docker-maven-plugin.version>
        <surefire-maven-plugin.version>3.1.2</surefire-maven-plugin.version>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
        <org.projectlombok.version>1.18.28</org.projectlombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <docker.wait.http.url>http://localhost:8080/actuator/health/ping</docker.wait.http.url>
        <docker.wait.time>90000</docker.wait.time>
        <openapi-generator.version>6.6.0</openapi-generator.version>
        <swagger.version>2.2.15</swagger.version>
        <jackson-databind-nullable.version>0.2.4</jackson-databind-nullable.version>
        <javafaker.version>1.0.2</javafaker.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-docker-compose</artifactId>-->
        <!--            <scope>runtime</scope>-->
        <!--            <optional>true</optional>-->
        <!--        </dependency>-->

        <!--for openapi-->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-models</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!--for testing only-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mongodb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>rabbitmq</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase-maven-plugin.version}</version>
                    <configuration>
                        <propertyFileWillOverride>false</propertyFileWillOverride>
                        <propertyFile>liquibase.properties</propertyFile>
                        <dropFirst>false</dropFirst>
                        <skip>true</skip>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.liquibase.ext</groupId>
                            <artifactId>liquibase-mongodb</artifactId>
                            <version>${liquibase-maven-plugin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <configuration>
                        <verbose>true</verbose>
                        <skip>true</skip>
                        <skipPom>true</skipPom>
                        <images>
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker</prefix>
                                    <mode>override</mode>
                                </external>
                                <name>echirilovici/${project.artifactId}:${project.version}</name>
                                <alias>${project.artifactId}</alias>
                                <build>
                                    <dockerFileDir>${project.basedir}</dockerFileDir>
                                    <imagePullPolicy>Always</imagePullPolicy>
                                    <tags>
                                        <tag>${project.version}</tag>
                                    </tags>
                                    <optimise>true</optimise>
                                </build>
                                <run>
                                    <hostname>${project.artifactId}</hostname>
                                    <env>
                                        <ENABLE_ZIPKIN>true</ENABLE_ZIPKIN>
                                        <ZIPKIN_BASE_URL>http://openzipkin:9411/</ZIPKIN_BASE_URL>
                                    </env>
                                    <wait>
                                        <http>
                                            <url>${docker.wait.http.url}</url>
                                        </http>
                                        <time>${docker.wait.time}</time>
                                    </wait>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${surefire-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                            <configuration>
                                <includes>
                                    <include>**/*IT.*</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>unit-tests</id>
                            <phase>test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <includes>
                                    <include>**/*Test.java</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${org.mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${org.projectlombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator.version}</version>
                    <executions>
                        <execution>
                            <id>generate-code</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <!-- Spring generator config -->
                                <generatorName>spring</generatorName>
                                <library>spring-boot</library>
                                <!-- Reference to the productstore spec -->
                                <inputSpec>${project.basedir}/src/main/resources/openapi/pet.yml</inputSpec>
                                <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                                <!-- Enable API generation -->
                                <generateApis>true</generateApis>
                                <!-- Enable API documentation generation -->
                                <generateApiDocumentation>true</generateApiDocumentation>
                                <!-- Do not generate tests -->
                                <generateApiTests>false</generateApiTests>
                                <generateModelTests>false</generateModelTests>
                                <!-- Generate models -->
                                <generateModels>true</generateModels>
                                <generateModelDocumentation>false</generateModelDocumentation>
                                <generateSupportingFiles>true</generateSupportingFiles>
                                <!-- Generation output will be in target/generated-sources -->
                                <output>${project.build.directory}/generated-sources</output>
                                <!-- Model java package name -->
                                <modelPackage>${base.package}.app.server.openapi.model</modelPackage>
                                <!-- API java package name -->
                                <apiPackage>${base.package}.app.server.openapi.api</apiPackage>
                                <configOptions>
                                    <reactive>true</reactive>
                                    <sourceFolder>main/java</sourceFolder>
                                    <!-- Use modern java8 date/time api -->
                                    <dateLibrary>java8</dateLibrary>
                                    <java8>true</java8>
                                    <oas3>true</oas3>
                                    <useSpringController>true</useSpringController>
                                    <useSpringBoot3>true</useSpringBoot3>
                                    <useSpringfox>false</useSpringfox>
                                    <!-- Enable bean validation using javax validation and hibernate validator  -->
                                    <useBeanValidation>true</useBeanValidation>
                                    <performBeanValidation>true</performBeanValidation>
                                    <interfaceOnly>true</interfaceOnly>
                                    <!-- Use delegate pattern to separate implementation from API definition  -->
                                    <delegatePattern>true</delegatePattern>
                                    <useOptional>false</useOptional>
                                    <!-- Place required parameters first in models  -->
                                    <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                                    <sortParamsByRequiredFlag>true</sortParamsByRequiredFlag>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
</project>
